version: '3.8'

services:
  grafana:
    image: grafana/grafana:8.5.27
    container_name: grafana
    user: "$UID:$GID"
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana_data:/var/lib/grafana
    environment:
      GF_SERVER_ROOT_URL: https://${HOSTNAME_GRAFANA}
      GF_RENDERING_SERVER_URL: http://grafana-renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: grafana-renderer:debug

  grafana-renderer:
    image: grafana/grafana-image-renderer:3.11.1
    container_name: grafana-renderer
    restart: always
    ports:
      - 8081:8081
    environment:
      ENABLE_METRICS: 'true'

  grafana-tunnel:
    image: cloudflare/cloudflared:2022.12.1
    restart: always
    volumes:
      - ./cloudflared:/etc/cloudflared
    command: tunnel --hostname ${HOSTNAME_GRAFANA} --url http://grafana:3000

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"

  prometheus-blackbox:
    image: prom/blackbox-exporter:v0.25.0
    container_name: blockbox
    restart: always
    ports:
      - 9115:9115

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager:/etc/alertmanager
    command: "--config.file=/etc/alertmanager/config.yaml"

  influxdb:
    image: influxdb:2.7.8-alpine
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - ./influxdb:/var/lib/influxdb

  domain_exporter:
    container_name: domain_exporter
    image: ghcr.io/caarlos0/domain_exporter:v1.23.0
    restart: always
    ports:
      - 9222:9222
